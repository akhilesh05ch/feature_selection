import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
data = pd.read_csv('melbourne_housing_raw.csv')
print(data)
missing_percent = (data.isnull().sum() / len(data)) * 100
columns_to_drop = missing_percent[(missing_percent > 20) & (missing_percent.index != 'Price')].index.tolist()
data_filtered = data.drop(columns=columns_to_drop)
X = data_filtered.drop('Price', axis=1)
y = data_filtered['Price']
X = pd.get_dummies(X)
X[column] = pd.to_numeric(X[column], errors='coerce')
X = X.fillna(X.mean())
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
rmse = mean_squared_error(y_test, y_pred, squared=False)
print(f"RMSE with filtered columns: {rmse}")
